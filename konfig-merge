#!/usr/bin/env bash

# Copyright 2019 Cornelius Weig
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[[ -n $DEBUG ]] && set -x

set -eou pipefail
IFS=$':\n\t'

SELF_CMD="$0"

usage() {
  cat <<'EOF'
USAGE:
  konfig-merge <CONFIG1> [<CONFIG2>..]           : merge multiple kubeconfigs
  konfig-merge -e,--extract <CONTEXT> [<CONFIG>] : extract kubeconfig for given context

  konfig-merge -h,--help                         : show this message
EOF
}

merge_contexts() {
  KUBECONFIG="$*" $KUBECTL config view --raw --merge
}

extract_context() {
  local kubeconfig="${2:-}"
  if [[ -z "$kubeconfig" ]]; then
    $KUBECTL config view --raw --minify --context="$1"
  else
    KUBECONFIG="$kubeconfig" $KUBECTL config view --raw --minify --context="$1"
  fi
}

main() {
  if hash kubectl 2>/dev/null; then
    KUBECTL=kubectl
  elif hash kubectl.exe 2>/dev/null; then
    KUBECTL=kubectl.exe
  else
    echo >&2 "kubectl is not installed"
    exit 1
  fi

  if [[ "$#" -eq 0 ]]; then
    usage
  elif [[ "${1}" == "-e" || "${1}" == '--extract' ]]; then
    if [[ "$#" -gt 3 ]]; then
      echo "error: too many arguments" >&2
      usage
      exit 1
    fi
    extract_context "${@:2}"
  elif [[ "${1}" == '-h' || "${1}" == '--help' ]]; then
    usage
  elif [[ "${1}" =~ ^-(.*) ]]; then
    echo "error: unrecognized flag \"${1}\"" >&2
    usage
    exit 1
  elif [[ "$#" -gt 1 ]]; then
    merge_contexts "${@}"
  else
    echo "error: not enough arguments" >&2
    usage
    exit 1
  fi
}

main "$@"
